<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add a Game</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
      }

      #addGameForm {
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        margin: auto;
      }

      div {
        margin-bottom: 15px;
        margin-left: 20px;
        margin-right: 20px;
      }

      h2 {
        text-align: center;
        font-size: 2rem;
      }
      label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        color: #555;
      }

      input[type="text"],
      textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
      }

      input[type="text"]:focus,
      textarea:focus {
        border-color: #007bff;
        outline: none;
      }

      button {
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 10px;
        cursor: pointer;
        font-size: 16px;
        width: 100%;
      }

      button:hover {
        background-color: #0056b3;
      }

      /* Autocomplete suggestions styles */
      .autocomplete-suggestions {
        border: 1px solid #ccc;
        border-radius: 4px;
        background: #fff;
        position: absolute;
        z-index: 999;
        max-height: 150px;
        overflow-y: auto;
      }

      .autocomplete-suggestion {
        padding: 10px;
        cursor: pointer;
      }

      .autocomplete-suggestion:hover {
        background-color: #f0f0f0;
      }

      /* Error message styles */
      .error-message {
        color: red;
        font-size: 14px;
        margin-top: 5px;
      }

      .error-summary {
        color: red;
        font-weight: bold;
        margin-bottom: 15px;
      }
select{
  width:100%;
  padding: 10px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
}
      
    </style>
  </head>
  <body>
    <%- include('header') %>

    <div class="container" style="margin-top: 8rem">
      <h2>Add a New Game</h2>

      <form id="addGameForm" action="/new" method="POST">
        <!-- Game Title -->
        <div>
          <label for="title">Game Title:</label>
          <input
            type="text"
            id="title"
            name="title"
            value="<%= oldValues && oldValues.title %>"
            required
          />
          <% if (errors) { %> <% errors.filter(error => error.path ===
          'title').forEach(error => { %>
          <div class="error-message"><%= error.msg %></div>
          <% }) %> <% } %>
        </div>

        <!-- Author -->
        <div>
          <label for="author">Author:</label>
          <input
            type="text"
            id="author"
            name="author"
            value="<%= oldValues && oldValues.author %>"
            required
          />
          <% if (errors) { %> <% errors.filter(error => error.path ===
          'author').forEach(error => { %>
          <div class="error-message"><%= error.msg %></div>
          <% }) %> <% } %>
        </div>

        <!-- Genre -->
        <div >
          <label for="genre" >Genre</label>
          <select id="genre" name="genre" class="<%= errors.some(error => error.path === 'genre') ? 'error' : '' %>" required>
            <option value="action" <%= oldValues.genre === 'Action' ? 'selected' : '' %>>Action</option>
            <option value="adventure" <%= oldValues.genre === 'Adventure' ? 'selected' : '' %>>Adventure</option>
            <option value="role-playing game" <%= oldValues.genre === 'Role-Playing Game' ? 'selected' : '' %>>Role-playing</option>
            <option value="simulation" <%= oldValues.genre === 'Simulation' ? 'selected' : '' %>>Simulation</option>
            <option value="strategy" <%= oldValues.genre === 'Strategy' ? 'selected' : '' %>>Strategy</option>
            <option value="sports" <%= oldValues.genre === 'Sports' ? 'selected' : '' %>>Sports</option>
          </select>
          <% if (errors) { %>
            <% errors.forEach(function(error) { %>
              <% if (error.path === 'genre') { %>
                <div class="error-message"><%= error.msg %></div>
              <% } %>
            <% }); %>
          <% } %>
        </div>

        <!-- Description -->
        <div>
          <label for="description">Description:</label>
          <textarea
            id="description"
            name="description"
            rows="4"
            value="<%= oldValues && oldValues.description %>"
            required
          ></textarea>
          <% if (errors) { %> <% errors.filter(error => error.path ===
          'description').forEach(error => { %>
          <div class="error-message"><%= error.msg %></div>
          <% }) %> <% } %>
        </div>

        <div>
          <button type="submit">Add Game</button>
        </div>
      </form>
    </div>

    <script>
      const genres = [
        "Action",
        "Adventure",
        "Role-playing",
        "Simulation",
        "Strategy",
      ]; // Define your genres here

      const genreInput = document.getElementById("genre");
      const suggestionsContainer = document.getElementById("suggestions");

      genreInput.addEventListener("input", function () {
        const input = this.value.toLowerCase();
        suggestionsContainer.innerHTML = "";

        if (input) {
          const filteredGenres = genres.filter((genre) =>
            genre.toLowerCase().includes(input)
          );
          filteredGenres.forEach((genre) => {
            const suggestionItem = document.createElement("div");
            suggestionItem.className = "autocomplete-suggestion";
            suggestionItem.textContent = genre;
            suggestionItem.addEventListener("click", function () {
              genreInput.value = genre;
              suggestionsContainer.innerHTML = ""; // Clear suggestions
            });
            suggestionsContainer.appendChild(suggestionItem);
          });
        }
      });

      // Close suggestions when clicking outside
      document.addEventListener("click", function (event) {
        if (
          !suggestionsContainer.contains(event.target) &&
          event.target !== genreInput
        ) {
          suggestionsContainer.innerHTML = "";
        }
      });
    </script>
  </body>
</html>
